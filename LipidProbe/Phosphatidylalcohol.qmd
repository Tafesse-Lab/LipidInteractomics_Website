---
title: "Phosphatidyl diazirine alkyne alcohol"
subtitle: "PDAA"
format: 
  html:
    embed-resources: false
callout-icon: false
---

## Structure

:::{.border}
::: {layout="[[100], [-25, 50, -25], [100]]"}
![(A) Native Phosphatidylethanol.](/LipidProbe/Structures/POH.png)

![(B) Diazirine alkyne alcohol.](/LipidProbe/Structures/DAA.png)

![(C) Phosphatidyl diazirine alkyne alcohol (PDAA).](/LipidProbe/Structures/PDAA.png)

Temporary chemical structures drawn by Gaelen Guzman.
:::
:::

## Protein Interactome


::: {.callout-note collapse="true"}

{{< include /StudyInformation_includes/WY_2021_include.qmd >}}

:::



```{r PDAA_setup, include=FALSE, echo=FALSE}
## intitialize libraries
library(here)
library(biomaRt)
library(rentrez)

## Opening the source file for the ggplot custom theme
source(here("Resources/ggplot_styles.R"))

data <- read_csv(here("IndividualStudies/DataTables/WY_2021_ACSChemBio_Download.csv"))

# Organize the hit annotations as factors
data$hit_annotation <- factor(pull(data, hit_annotation), levels = c("enriched hit", "hit", "enriched candidate", "candidate", "no hit", "NA"), ordered = TRUE)

```


#### Data visualization

::::{.border}
::: {.panel-tabset}

##### Volcano plots

```{r, echo=FALSE, warning=FALSE}
#| fig-cap: "Volcano plots depict the relative enrichment of each protein versus non-crosslinked control (x-axis) and the statistical significance of each protein following a Student's t-test (y-axis, -log10 transformed). Black proteins are designated as not statistically significant. Orange \"enriched hit\" denotes proteins with fold-changes > 1.5 (logFC > 0.5) pvalue < 0.05. Only proteins identified in all three replicates are displayed."

VolcanoPlotStandardized(data)

```

##### Ranked order plot

```{r, echo=FALSE, warning=FALSE}
#| fig-cap: "Data as reported in [Yu et al., 2021, 2024](/IndividualStudies/WY_2021.qmd). Black proteins are designated as not statistically significant. Orange \"enriched hit\" denotes proteins with fold-changes > 1.5 (logFC > 0.5) pvalue < 0.05. Only proteins identified in all three replicates are displayed."

RankedOrderPlotStandard(data)
```

##### MA plot

```{r, echo=FALSE, warning=FALSE}
#| fig-cap: "Data as reported in [Yu et al., 2021](/IndividualStudies/WY_2021.qmd). Black proteins are designated as not statistically significant. Orange \"enriched hit\" denotes proteins with fold-changes > 1.5 (logFC > 0.5) pvalue < 0.05. Only proteins identified in all three replicates are displayed."

MAStandard(data)
```


<!-- ##### Venn Diagram -->

```{r Venn_wrangling, include=FALSE, warning=FALSE}

# ###### Wrangling for the Venn Diagram ######
# # Read the dataset

# VennData <- read_csv(here("IndividualStudies/DataTables/WY_2021_ACSChemBio_RawData2.csv"))

# # Convert wide format to long format
# VennData <- VennData |> 
#   mutate(logFC_1 = log2(Sample_1 / Control_1),
#          logFC_2 = log2(Sample_2 / Control_2),
#          logFC_3 = log2(Sample_3 / Control_3)) |>
#   pivot_longer(cols = c(8,9,10)) |>
#   select(gene_name, name, value) |>
#   filter(!is.na(value)) |> 
#   mutate(Replicate = case_when(name == "logFC_1" ~ 1,
#                                name == "logFC_2" ~ 2,
#                                name == "logFC_3" ~ 3))
                               
# # Separates out each of the genesets, then forces them back together in a vectorized list.
# A_proteins <- VennData |>
#   filter(Replicate == 1) |>
#   dplyr::select(gene_name)

# B_proteins <- VennData |>
#   filter(Replicate == 2) |>
#   dplyr::select(gene_name)

# C_proteins <- VennData |>
#   filter(Replicate == 3) |>
#   dplyr::select(gene_name)

# VennList <- list("Trial 1" = as.list(A_proteins$gene_name), "Trial 2" = as.list(B_proteins$gene_name), "Trial 3" = as.list(C_proteins$gene_name))
```

```{r NAPE_Venn, include=FALSE, echo=FALSE, warning=FALSE}
# #| fig-cap: "Data as reported in [Yu et al., 2021](/IndividualStudies/WY_2021.qmd). A Venn diagram depicts the overlapping identification of proteins between the three trials (replicates)."

# ggvenn <- ggvenn(VennList,
#                       show_percentage = FALSE,
#                       show_elements = FALSE,
#                       fill_color = c("orange", "purple", "blue")) +
#         labs(x = "", y = "") +
#         theme_minimal()

# ggvenn

```

:::
::::


#### Gene Ontology Analysis

**In beta: GO analysis still under development**

:::::{.border}
::::{#fig-PE_GOplots}
::: {.panel-tabset}

##### Cell Compartment

<iframe src="/LipidProbe/GO_plots/PDAA_WY_2021_CC-DOTplot.html" width="100%" height="500px"></iframe>

##### Molecular Function

No enriched molecular functions identified among enriched hits and candidates.

##### Biological Process

No enriched biological processes identified among enriched hits and candidates.

:::

GO Dot plots display the enrichment of GO terms among the proteins enriched to the probe. For these analyses, only proteins categorized as "enriched candidates" and "enriched hits" were subject to GO analysis. The Cell Compartment analysis assesses whether the list of enriched proteins contains a statistically significant number of proteins in the same cellular region; appropriately, the Molecular Function and Biological Process analyses does the same for molecular function and biological process, respectively. [Click here for more information about Gene Ontology Analysis.](/Background/DataAnalysisAndStatistics.qmd#gene-ontology-overview) 
::::
:::::



#### Data exploration and download

Check the boxes below to filter by significance thresholds.

:::{.border}
```{r PDAA_DataTable, echo=FALSE, warning=FALSE}

# Here is the code to make the filterable lists shown in the crosstalk table below

data <- data |>
  dplyr::select(gene_name, LipidProbe, hit_annotation, logFC, pvalue) |>
  mutate(logFC = signif(logFC, digits=3)) |>
  mutate(pvalue = signif(pvalue, digits=3)) |>
  arrange(-logFC) |>
  arrange(hit_annotation)

## Creates a reactive dataframe
data_reactive <- crosstalk::SharedData$new(data)

htmltools::tags$div(
  class = "filter-container",
  filter_checkbox(id = "LipidProbe",
                  label = "Lipid probe in pulldown:", 
                  sharedData = data_reactive,
                  group = ~LipidProbe),
  filter_checkbox(id = "hit_annotation",
                  label = "Enrichment criteria:", 
                  sharedData = data_reactive,
                  group = ~hit_annotation)
)

## Displays the reactive dataframe
datatable(data_reactive, 
          caption = "This datatable contains all the data plotted above. Check the boxes below to filter the dataset by which lipid probe was used in the pulldown and by significance thresholds. \"enriched hit\" denotes proteins with fold-changes > 1.5 (logFC > 0.5) pvalue < 0.05. Only proteins identified in all three replicates are displayed.",
          options = list(pageLength = 10),
                         colnames = c("Gene Name", "Lipid Probe", "Hit Annotation", "LogFC", "p value"),
                         rownames=FALSE)

```
:::

<br> 

{{< downloadthis DataSets/PDAA_WY_2021_ACSChemBio_Download.csv dname="PDAA_WY_2021_ACSChemBio_download">}}
