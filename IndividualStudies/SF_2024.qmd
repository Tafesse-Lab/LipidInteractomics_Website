---
title: "Farley et al. 2024"
subtitle: "Trifunctional Sphinganine: A New Tool to Dissect Sphingolipid Function"
format: 
  html:
    embed-resources: false
standalone: false
---

```{r setup, echo=FALSE, include=FALSE}
## intitialize libraries
library(dplyr)
library(tidyr)
library(plotly)
library(ggplot2)
library(grid)
library(readr)
library(rmarkdown)
library(emojifont)
library(gt)
library(crosstalk)
library(DT)
library(htmltools)

## Opening the source file for the ggplot custom theme
source("ggplot_styles.R")

## Some data wrangling to clean up Scotty's data
SF_2024_data_raw <- readr::read_csv("DataTables/SF_ACS-ChemBio_2024_Limma_results_V3.csv") 

## This is a little messy, but converts the raw data Scotty received from Frank and Per to a clean and minimal dataframe.
SF_2024_data <- SF_2024_data_raw |>
	select(gene_name, keep_Huh7, comparison, logFC, pvalue, hit_annotation) |>
	filter(keep_Huh7 == TRUE) |>
	select(-keep_Huh7) |>
	mutate(LipidProbe = case_when(comparison == "Spa_UV - Spa_noUV" ~ "Spa",
															 comparison == "Sph_UV - Sph_noUV" ~ "Sph")) |>
	filter(LipidProbe == "8-3 FA" | LipidProbe == "1-10 FA" | LipidProbe == "Spa" | LipidProbe == "Sph") |>
	select(-comparison) |>
	glimpse()

# Organize the hit annotations as factors
SF_2024_data$hit_annotation <- factor(pull(SF_2024_data, hit_annotation), levels = c("enriched hit", "hit", "enriched candidate", "candidate", "no hit", "NA"), ordered = TRUE)

# Organize the probes as factors
SF_2024_data$LipidProbe <- factor(pull(SF_2024_data, LipidProbe), levels = c("Spa", "Sph", "8-3 FA", "1-10 FA"), ordered = TRUE)

# Building an ID column to maintain the order on the x-axis
ID <- c()
for(i in 0:(nrow(SF_2024_data)/2)){
	ID[i] = i
}


# Applies the ID column to the Spa results
SF_2024_ranked_Spa <- SF_2024_data |>
    arrange(logFC) |>
	filter(LipidProbe == "Spa") |>
	mutate(ID = ID) 

# Applies the ID column to the Sph results
SF_2024_ranked_Sph <- SF_2024_data |>
    arrange(logFC) |>
	filter(LipidProbe == "Sph") |>
	mutate(ID = ID) 

# Assembles the dataset to plot
SF_2024_ranked <- rbind(SF_2024_ranked_Sph, SF_2024_ranked_Spa)
```

Scotland E. Farley, Frank Stein, Per Haberkant, Fikadu G. Tafesse, Carsten Schultz*

Correspondence: <schulcar@ohsu.edu>{target="_blank"}

2024-02-16

[ACS Chemical Biology](https://pubs.acs.org/doi/10.1021/acschembio.3c00554){target="_blank"}

<https://doi.org/10.1021/acschembio.3c00554>{target="_blank"}

## Abstract

Functions of the sphingolipids sphingosine and sphinganine in cells are not well established. While some signaling roles for sphingosine have been elucidated, the closely related sphinganine has been described only insofar as it does not elicit many of the same signaling responses. The underlying mechanisms behind the cell biological differences between these lipids are not well understood. Here, we prepared multifunctionalized derivatives of the two lipid species that only differ in a single double bond of the carbon backbone. Using these novel probes, we were able to define their spatiotemporal distribution within cells. Furthermore, we used these tools to systematically map the protein interactomes of both lipids. The lipid-protein conjugates, prepared through photo-crosslinking in live cells and extraction via click chemistry to azide beads, revealed significant differences in the captured proteins, highlighting their distinct roles in various cellular processes. This work elucidates mechanistic differences between these critical lipids and sets the foundation for further studies on the functions of sphingosine and sphinganine.


## Study details

### Lipid probes utilized

### Cell line analyzed

### Additional sample preparation <span class="help-symbol" title="e.g. sub-cellular fractionation, depletion, etc.">?</span>


## Data visualization

#### Ranked-order Log2 Fold-change plots

:::{.border}
```{r, echo=FALSE, warning=FALSE}
#| fig-cap: "Ranked-order plots depict the relative enrichment of each protein versus control (y-axis) from lowest to highest. The left panel depicts the results of a pulldown using trifunctionalized phosphatidic acid; the right panel depicts the results of the pulldown using trifunctionalized phosphatidylethanolamine. Black proteins are unenriched or depleted in the presence of probe, Purple proteins are enriched to the probe but fall below a FDR or p-value threshold of significance, and Orange proteins surpass the threshold of significance (need details of threshold)."

RankedOrderPlotStandard(SF_2024_ranked)
```
:::

#### Volcano plots

:::{.border}
```{r, echo=FALSE, warning=FALSE}
#| fig-cap: "Volcano plots depict the relative enrichment of each protein versus control (x-axis) and the statistical significance of each protein following a Student's t-test (y-axis, -log10 transformed). The left panel depicts the results of a pulldown using trifunctionalized phosphatidic acid; the right panel depicts the results of the pulldown using trifunctionalized phosphatidylethanolamine. Black proteins are unenriched or depleted in the presence of probe, Purple proteins are enriched to the probe but fall below a FDR or p-value threshold of significance, and Orange proteins surpass the threshold of significance (need details of threshold)."

VolcanoPlotStandardized(SF_2024_data)

```
:::

## Enriched Proteins


Check the boxes below to filter the dataset by which lipid probe was used in the pulldown and by significance thresholds.


:::{.border}
```{r, echo=FALSE, warning=FALSE}

# Here is the code to make the filterable lists shown in the crosstalk table below

## Creates a reactive dataframe
SF_2024_data_reactive <- crosstalk::SharedData$new(SF_2024_data)

htmltools::tags$div(
  class = "filter-container",
  filter_checkbox(id = "LipidProbe",
                  label = "Lipid probe in pulldown:", 
                  sharedData = SF_2024_data_reactive,
                  group = ~LipidProbe),
  filter_checkbox(id = "hit_annotation",
                  label = "Enrichment criteria:", 
                  sharedData = SF_2024_data_reactive,
                  group = ~hit_annotation)
)

## Displays the reactive dataframe
datatable(SF_2024_data_reactive, options = list(pageLength = 25))

```
:::

## Data download

{{< downloadthis DataTables/SF_ACS-Chem-Bio_2024_download.csv dname="SF_ACS-Chem-Bio_2024">}}

