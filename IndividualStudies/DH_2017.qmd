---
title: "HÃ¶glinger et al. 2017"
subtitle: "Trifunctional lipid probes for comprehensive studies of single lipid species in living cells"
format:
  html:
    embed-resources: false
standalone: false
---
<!-- R setup, reading data tables, wrangling data -->
```{r setup, echo=FALSE, include=FALSE, warning=FALSE}

## intitialize libraries
library(dplyr)
library(tidyr)
library(plotly)
library(ggplot2)
library(grid)
library(readr)
library(rmarkdown)
library(emojifont)
library(gt)
library(crosstalk)
library(DT)
library(stringr)
library(here)
library(heatmaply)
library(ggvenn)
library(scales)
## Opening the source file for the ggplot custom theme
source(paste0(here(), "/Resources/ggplot_styles.R"))

DH_2017_data <- read.csv(paste0(here(),"/IndividualStudies/DataTables/DH_PNAS_2017_download.csv")) |>
  mutate(gene_name = str_extract(Description, "GN=([^\\s]+)") |> str_remove("GN=")) |>
  mutate(Species = str_extract(Description, "OS=([^=]+?)\\sGN=") |> str_remove("OS=") |> str_remove("GN=")) |>
  filter(Species == "Homo sapiens ") |>
  mutate(PSM_Sph = (PSM_Sph1 + PSM_Sph2) / 2,
         PSM_FA = (PSM_FA1 + PSM_FA2) / 2,
         PSM_DAG = (PSM_DAG1 + PSM_DAG2) /2) |>
  dplyr::select(gene_name, PSM_Sph, PSM_FA, PSM_DAG) |>
  arrange(gene_name) |>
  group_by(gene_name) |>
  summarise(PSM_DAG = mean(PSM_DAG),
            PSM_FA = mean(PSM_FA),
            PSM_Sph = mean(PSM_Sph))
```


::: {.callout-note collapse="true"}

{{< include /StudyInformation_includes/DH_2017_include.qmd >}}

:::

## Data visualization

#### Heat map

Depicted below are the average PSM count for two replicates each of UV-irradiated samples treated with trifunctionalized Sph, DAG, and FA.
:::{.border}
```{r, echo=FALSE, fig.height=10, warning=FALSE}

DH_2017_data_long <- DH_2017_data |>
  pivot_longer(cols = starts_with("PSM_"),
              names_to = "variable",
              names_prefix = "PSM_",
              values_to = "value") |>
  mutate(name = gene_name) |>
  dplyr::select(name, variable, value)
  # mutate(OriginalValues = value) |>
  # mutate(value = case_when(value < 20 ~ value,
  #                           value >= 20 ~ 20))
  
DH_2017_data_long$variable <- factor(pull(DH_2017_data_long, variable), ordered = TRUE, levels = c("Sph", "FA", "DAG"))

# Create the heatmap
heatmaply(long_data = DH_2017_data_long,
          xlab = "Probe",
          ylab = "Gene name",
          label_names = c("Gene name", "Probe", "PSM count"),
          scale_fill_gradient_fun = ggplot2::scale_fill_gradientn(colours = c("grey95", "purple", "orange", "orange", "orange", "orange", "orange", "red", "red","red"), breaks = c(0, 5, 20, 200)),
          showticklabels = F)

```
:::

<hr>

#### Venn Diagram

:::{.border}
```{r, echo=FALSE, warning=FALSE, width = 8}

# Ensure the data is in the correct format
DH_2017_data_AddingRownames <- as.data.frame(DH_2017_data)
rownames(DH_2017_data_AddingRownames) <- DH_2017_data_AddingRownames[,1]
DH_2017_data_AddingRownames[,1] <- NULL

Sph_proteins <- DH_2017_data_AddingRownames |>
  filter(PSM_Sph > 0) |>
  dplyr::select(PSM_Sph)

FA_proteins <- DH_2017_data_AddingRownames |>
  filter(PSM_FA > 0) |>
  dplyr::select(PSM_FA)

DAG_proteins <- DH_2017_data_AddingRownames |>
  filter(PSM_DAG > 0) |>
  dplyr::select(PSM_DAG)


combined_venn_proteins <- list("Sph proteins" = rownames(Sph_proteins), "FA proteins" = rownames(FA_proteins), "DAG proteins" = rownames(DAG_proteins))

ggvenn <- ggvenn(combined_venn_proteins,
                      show_percentage = FALSE,
                      show_elements = FALSE,
                      fill_color = c("orange", "purple", "blue")) +
        labs(x = "", y = "") +
        theme_minimal()

ggvenn

```

```{r, echo=FALSE, warning=FALSE}

DH_2017_data <- DH_2017_data |>
  mutate(VennRegion = case_when(
    (PSM_Sph > 0 & PSM_DAG > 0 & PSM_FA > 0) ~ "Enriched to all probes",
    (PSM_Sph > 0 & PSM_DAG == 0 & PSM_FA == 0) ~ "Enriched to Sph only",
    (PSM_Sph == 0 & PSM_DAG > 0 & PSM_FA == 0) ~ "Enriched to DAG only",
    (PSM_Sph == 0 & PSM_DAG == 0 & PSM_FA > 0) ~ "Enriched to FA only",
    (PSM_Sph > 0 & PSM_DAG > 0 & PSM_FA == 0) ~ "Enriched to Sph and DAG",
    (PSM_Sph > 0 & PSM_DAG == 0 & PSM_FA > 0) ~ "Enriched to Sph and FA",
    (PSM_Sph == 0 & PSM_DAG > 0 & PSM_FA > 0) ~ "Enriched to DAG and FA")) 


DH_2017_data$VennRegion <- factor(pull(DH_2017_data, VennRegion), ordered = TRUE, levels = c("Enriched to Sph only", "Enriched to DAG only", "Enriched to FA only", "Enriched to Sph and DAG", "Enriched to Sph and FA", "Enriched to DAG and FA", "Enriched to all probes"))

DH_2017_data_reactive <- crosstalk::SharedData$new(DH_2017_data)


htmltools::tags$div(
  class = "filter-container",
  filter_checkbox(id = "Overlap",
                  label = "Select overlap regions to see co-enriched proteins:",
                  sharedData = DH_2017_data_reactive,
                  group = ~VennRegion,
                  inline = TRUE)
)


## Displays the reactive dataframe
datatable(DH_2017_data_reactive, options = list(pageLength = 20))


```

:::




## Data download


{{< downloadthis DataTables/DH_PNAS_2017_download.csv dname="DH_PNAS_2017">}}


